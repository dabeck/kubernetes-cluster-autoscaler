apiVersion: v1
kind: ServiceAccount
metadata:
  name: autoscalar
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: autoscalar
  namespace: kube-system
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: autoscalar
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: autoscalar
subjects:
  - kind: ServiceAccount
    name: autoscalar
    namespace: kube-system

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autoscalar
  namespace: kube-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kube-autoscalar
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: kube-autoscalar
    spec:
      containers:
        - name: autoscalar
          image: dabeck/cluster-autoscaler:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: config
              mountPath: /go/bin/conf.yml
              subPath: conf.yml
      serviceAccount: autoscalar
      serviceAccountName: autoscalar
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: autoscalar-config
